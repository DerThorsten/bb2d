# [build-system]
# requires = ["scikit-build-core >=0.10", "nanobind >=1.3.2"]
# build-backend = "scikit_build_core.build"

# [project]
# name = "pyb2d"
# version = "0.0.1"
# description = "python bindings for box2d"
# readme = "README.md"
# requires-python = ">=3.8"

# classifiers = [
#     "License :: OSI Approved :: BSD License",
# ]

# [project.urls]
# Homepage = "https://github.com/wjakob/nanobind_example"


# [tool.scikit-build]
# # Protect the configuration against future changes in scikit-build-core
# minimum-version = "build-system.requires"

# # Setuptools-style build caching in a local directory
# build-dir = "build/{wheel_tag}"

# # Build stable ABI wheels for CPython 3.12+
# wheel.py-api = "cp312"

# [tool.cibuildwheel]
# # Necessary to see build output from the actual compilation
# build-verbosity = 1

# # Run pytest to ensure that the package was correctly built
# test-command = "pytest {project}/tests"
# test-requires = "pytest"


# # pyproject.toml
# [tool.pytest.ini_options]
# minversion = "6.0"
# testpaths = [
#     "tests/pyb2d_tests"
# ]


# # Needed for full C++17 support
# [tool.cibuildwheel.macos.environment]
# MACOSX_DEPLOYMENT_TARGET = "10.14"












[build-system]
build-backend = "scikit_build_core.build"
requires = ["scikit-build-core", "nanobind"]

[project]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
description = "A simple nanobind example"
name = "pyb2d"
requires-python = ">=3.9"
version = "0.1.0"


[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

[tool.scikit-build]
cmake.source-dir = "."
sdist.exclude = [".pixi"]
wheel.packages = ["pyb2d"]
# # Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
nanobind = ">=2.4.0,<3"
numpy = ">=1.21.2,<3"

[tool.pixi.feature.build.dependencies]
cmake = ">=3.15,<4"
cxx-compiler = ">=1.8.0,<2"
make = ">=4.4.1,<5"
ninja = ">=1.12.1,<2"
scikit-build-core = ">=0.10.7,<0.11"
uv = ">=0.4.25,<0.5"


[tool.pixi.feature.test.dependencies]
pytest = ">=6.2.5"


[tool.pixi.feature.build.tasks.clone-box2d]
cmd = """
    git clone git@github.com:erincatto/box2d.git --branch main --depth 1 deps/box2d || true &&
    patch -d deps/box2d -p1 -i ../box2d_patches/conditional_disable_cxx_operators.patch
"""
outputs = ["deps/box2d/include/box2d/math_functions.h"]


# [tool.pixi.feature.build.tasks.patch-box2d ]
# cmd = "patch -d deps/box2d -p1 -i ../box2d_patches/conditional_disable_cxx_operators.patch"


[tool.pixi.feature.build.tasks.configure-box2d]
cmd = """
    cmake -S deps/box2d -B deps/box2d/build \
        -DCMAKE_INSTALL_PREFIX=$(pwd)/.pixi/envs/default \
        -DCMAKE_INSTALL_LIBDIR=$(pwd)/.pixi/envs/default/lib \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_SHARED_LIBS=ON \
        -DBOX2D_UNIT_TESTS=OFF \
        -DBOX2D_BENCHMARKS=OFF \
        -DBOX2D_SAMPLES=OFF
"""


depends-on = ["clone-box2d"]

[tool.pixi.feature.build.tasks.build-box2d]
cmd = ["cmake", "--build", "deps/box2d/build", "--config", "Release", "--target", "install"]
depends-on = ["configure-box2d"]


[tool.pixi.feature.build.tasks.build-deps]
depends-on = ["build-box2d"]




[tool.pixi.feature.build.tasks.build]
cmd = ["uv", "build"]
depends-on = ["build-deps"]

[tool.pixi.environments]
build = ["build"]

[tool.pytest.ini_options]
minversion = "6.2.5"
testpaths = [
    "tests/pyb2d_tests"
]